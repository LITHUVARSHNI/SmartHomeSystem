import java.util.ArrayList;
import java.util.List;

// Subject
interface Stock {
    void registerObserver(Observer o);
    void removeObserver(Observer o);
    void notifyObservers();
}

// Concrete Subject
class StockData implements Stock {
    private List<Observer> observers;
    private float price;

    public StockData() {
        observers = new ArrayList<>();
    }

    public void setPrice(float price) {
        this.price = price;
        notifyObservers();
    }

    public void registerObserver(Observer o) {
        observers.add(o);
    }

    public void removeObserver(Observer o) {
        observers.remove(o);
    }

    public void notifyObservers() {
        for (Observer observer : observers) {
            observer.update(price);
        }
    }
}

// Observer
interface Observer {
    void update(float price);
}

// Concrete Observer
class Investor implements Observer {
    private String name;

    public Investor(String name) {
        this.name = name;
    }

    public void update(float price) {
        System.out.println("Investor " + name + " notified. New price: " + price);
    }
}

public class ObserverPatternExample {
    public static void main(String[] args) {
        StockData stockData = new StockData();
        Investor investor1 = new Investor("John");
        Investor investor2 = new Investor("Doe");

        stockData.registerObserver(investor1);
        stockData.registerObserver(investor2);

        stockData.setPrice(100.50f);
        stockData.setPrice(101.00f);
    }
}
